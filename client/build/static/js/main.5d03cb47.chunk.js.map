{"version":3,"sources":["utils/auth.js","images/player-up-logo.png","components/NavLoggedIn.js","components/NavLoggedOut.js","components/Header.js","components/Footer.js","pages/Home.js","utils/mutations.js","pages/Login.js","utils/helpers.js","components/Event.js","pages/EditEvent.js","utils/queries.js","components/EventList.js","pages/Events.js","pages/NoMatch.js","pages/AddEvent.js","pages/Profile.js","pages/Signup.js","pages/SingleEvent.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","NavLoggedIn","titleLocation","param","useState","pageSelected","setPageSelected","homePage","setHomePage","useLocation","console","log","clickState","pathname","className","href","onClick","src","logo","alt","style","textDecoration","color","marginTop","to","Auth","logout","NavLoggedOut","Header","split","useEffect","document","title","loggedIn","Footer","target","rel","id","Home","LOGIN_USER","gql","ADD_USER","ADD_PLAYER","ADD_EVENT","UPDATE_EVENT","Login","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","login","error","handleInputChange","event","name","value","handleFormSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","username","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","pluralize","count","formatDate","date","original","formatTime","time","timeInt","JSON","parse","updatedTime","subtract","Event","variablesGlobal","eventName","attending","length","loadCounter","EditEvent","eventId","eventID","_id","description","numberPlayersNeeded","organizerName","setEventUpdate","updateEvent","QUERY_USER","QUERY_ME","QUERY_ALL_EVENTS","QUERY_SINGLE_EVENTS","EventList","events","useQuery","me","addPlayer","handleAddPlayer","handleEditEvent","map","eventObj","Events","loading","NoMatch","AddEvent","closeForm","eventFormData","setEventFormData","eventAdd","as","rows","Profile","refetch","userData","user","eventData","allEvents","commitments","filter","commitment","includes","commitmentList","setCommitmentList","eventList","setEventList","addEventPage","setAddEventPage","noEvents","Signup","addUser","SingleEvent","useParams","myData","width","height","frameBorder","scrolling","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5d03cb47.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n    // retrieve data saved in token\n    getProfile() {\n      return decode(this.getToken());\n    }\n  \n    // check if the user is still logged in\n    loggedIn() {\n      // Checks if there is a saved token and it's still valid\n      const token = this.getToken();\n      // use type coersion to check if token is NOT undefined and the token is NOT expired\n      return !!token && !this.isTokenExpired(token);\n    }\n  \n    // check if the token has expired\n    isTokenExpired(token) {\n      try {\n        const decoded = decode(token);\n        if (decoded.exp < Date.now() / 1000) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (err) {\n        return false;\n      }\n    }\n  \n    // retrieve token from localStorage\n    getToken() {\n      // Retrieves the user token from localStorage\n      return localStorage.getItem('id_token');\n    }\n  \n    // set token to localStorage and reload page to homepage\n    login(idToken) {\n      // Saves user token to localStorage\n      localStorage.setItem('id_token', idToken);\n  \n      window.location.assign('/');\n    }\n  \n    // clear token from localStorage and force logout with reload\n    logout() {\n      // Clear user token and profile data from localStorage\n      localStorage.removeItem('id_token');\n      // this will reload the page and reset the state of the application\n      window.location.assign('/');\n    }\n  }\n\nexport default new AuthService();","export default __webpack_public_path__ + \"static/media/player-up-logo.b9876253.png\";","import React, { useState } from \"react\";\nimport logo from \"../images/player-up-logo.png\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nconst NavLoggedIn = ({ titleLocation, param }) => {\n  // page selection state\n  const [pageSelected, setPageSelected] = useState(false);\n  const [homePage, setHomePage] = useState(true);\n\n  const location = useLocation()\nconsole.log(location)\n\n\tconst clickState = () => {\n\t\tsetHomePage(false);\n\t\tsetPageSelected(true);\n\t};\n\n  if (location.pathname !== \"/\") {\n    if(homePage) {\n    setHomePage(false)}\n  } \n \n\n  return (\n    <header>\n      {!homePage ? (\n        <div className=\"header\">\n          <a href=\"/\" onClick={() => setHomePage(true)}>\n            <div className=\"logo-header\">\n              <img className=\"logo\" src={logo} alt=\"player-up-logo\"></img>\n            </div>\n          </a>\n          <nav>\n            <ul className=\"nav-header\">\n              <li\n                className={\n                  pageSelected && (titleLocation === \"profile\") & !param\n                    ? \"nav-link navActive\"\n                    : \"nav-link\"\n                }\n                onClick={clickState}\n              >\n                <Link style={{ textDecoration: \"none\" }} to={\"/profile\"}>\n                  Profile\n                </Link>\n              </li>\n              <li\n                className={`nav-link ${\n                  pageSelected && titleLocation === \"events\" && \"navActive\"\n                }`}\n                onClick={clickState}\n              >\n                <Link style={{ textDecoration: \"none\" }} to={\"/events\"}>\n                  Events\n                </Link>\n              </li>\n              <li\n                className={`nav-link ${\n                  pageSelected && titleLocation === \"logout\" && \"navActive\"\n                }`}\n                onClick={clickState}\n              >\n                <Link\n                  style={{ textDecoration: \"none\" }}\n                  to={\"/\"}\n                  onClick={() => Auth.logout()}\n                >\n                  Logout\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      ) : (\n        <div className=\"header\">\n          <a className=\"hide\" href=\"/\" onClick={() => setHomePage(\"Home\")}>\n            <div className=\"logo-header\">\n              <img className=\"logo\" src={logo} alt=\"player-up-logo\"></img>\n            </div>\n          </a>\n          <div className=\"nav-home\">\n            <nav>\n              <ul className=\"nav-header\">\n                <li\n                  className={`nav-link-home ${pageSelected && \"navActive\"}`}\n                  onClick={clickState}\n                >\n                  <Link\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"#ffff\",\n                      marginTop: \"15px\",\n                    }}\n                    to={\"/profile\"}\n                    className=\"link-text\"\n                  >\n                    Profile\n                  </Link>\n                </li>\n                <li\n                  className={`nav-link-home ${pageSelected && \"navActive\"}`}\n                  onClick={clickState}\n                >\n                  <Link\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"#ffff\",\n                      marginTop: \"15px\",\n                    }}\n                    to={\"/events\"}\n                    className=\"link-text\"\n                  >\n                    Events\n                  </Link>\n                </li>\n                <li\n                  className={`nav-link-home ${pageSelected && \"navActive\"}`}\n                  onClick={clickState}\n                >\n                  <Link\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"#ffff\",\n                      marginTop: \"15px\",\n                    }}\n                    to={\"/\"}\n                    onClick={() => Auth.logout()}\n                    className=\"link-text\"\n                  >\n                    Logout\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default NavLoggedIn;\n","import React, {useState} from \"react\";\nimport logo from \"../images/player-up-logo.png\";\nimport { Link, useLocation } from \"react-router-dom\";\n// import Auth from \"../utils/auth\";\n\nconst NavLoggedOut = ({titleLocation}) => {\n     // page selection state\n  const [pageSelected, setPageSelected] = useState(false);\n  const [homePage, setHomePage] = useState(true); \n  const location = useLocation()\n\n  const clickState = () => {\n    setHomePage(false);\n    setPageSelected(true);\n  }\n\n  if (location.pathname !== \"/\") {\n    if(homePage) {\n    setHomePage(false)}\n  } \n\n  return (\n    <header>\n      {!homePage ? (\n        <div className=\"header\">\n          <a href=\"/\" onClick={() => setHomePage(\"Home\")}>\n            <div className=\"logo-header\">\n              <img className=\"logo\" src={logo} alt=\"player-up-logo\"></img>\n            </div>\n          </a>\n          <nav>\n            <ul className=\"nav-header\">\n              <li\n                className={`nav-link ${pageSelected && titleLocation === \"events\" && \"navActive\"}`}\n                onClick={clickState}\n              >\n                <Link style={{ textDecoration: \"none\" }} to={\"/events\"}>\n                  Events\n                </Link>\n              </li>\n              <li\n                className={`nav-link ${pageSelected && titleLocation === \"login\" && \"navActive\"}`}\n                onClick={clickState}\n              >\n                <Link style={{ textDecoration: \"none\" }} to={\"/login\"}>\n                  Login\n                </Link>\n              </li>\n              <li\n                className={`nav-link ${pageSelected && titleLocation === \"signup\" && \"navActive\"}`}\n                onClick={clickState}\n              >\n                <Link style={{ textDecoration: \"none\" }} to={\"/signup\"}>\n                  Signup\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      ) : (\n        <div className=\"header\">\n          <a className=\"hide\" href=\"/\" onClick={() => setHomePage(\"Home\")}>\n            <div className=\"logo-header\">\n              <img className=\"logo\" src={logo} alt=\"player-up-logo\"></img>\n            </div>\n          </a>\n          <div className=\"nav-home\">\n            <nav>\n              <ul className=\"nav-header\">\n                <li\n                  className={`nav-link-home ${pageSelected && \"navActive\"}`}\n                  onClick={clickState}\n                >\n                  <Link\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"#ffff\",\n                      marginTop: \"15px\",\n                    }}\n                    to={\"/events\"}\n                    className=\"link-text\"\n                  >\n                    Events\n                  </Link>\n                </li>\n                <li\n                  className={`nav-link-home ${pageSelected && \"navActive\"}`}\n                  onClick={clickState}\n                >\n                  <Link\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"#ffff\",\n                      marginTop: \"15px\",\n                    }}\n                    to={\"/login\"}\n                    className=\"link-text\"\n                  >\n                    Login\n                  </Link>\n                </li>\n                <li\n                  className={`nav-link-home ${pageSelected && \"navActive\"}`}\n                  onClick={clickState}\n                >\n                  <Link\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"#ffff\",\n                      marginTop: \"15px\",\n                    }}\n                    to={\"/signup\"}\n                    className=\"link-text\"\n                  >\n                    Signup\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default NavLoggedOut;\n","import React, { useEffect } from \"react\";\n// import logo from \"../images/player-up-logo.png\";\nimport { useLocation } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\nimport NavLoggedIn from \"./NavLoggedIn\";\nimport NavLoggedOut from \"./NavLoggedOut\";\n\nconst Header = () => {\n\n  // update document.title to match category \n  const location = useLocation();\n  const titleLocation = location.pathname.split(\"/\")[1]\n  const param = location.pathname.split(\"/\")[2]\n  useEffect(() => {\n    document.title = titleLocation \n    if (titleLocation !== \"profile\" && titleLocation !== \"events\" && titleLocation !== \"login\" && titleLocation !== \"signup\") {\n      document.title = \"PlayerUP\"\n    } \n  }, [titleLocation]);\n\n  return (\n    <>\n      {Auth.loggedIn() ? (\n        <NavLoggedIn titleLocation={titleLocation} param={param}></NavLoggedIn>\n      ) : (\n        <NavLoggedOut titleLocation={titleLocation} param={param}></NavLoggedOut>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-wrapper p-4\">\n      <div className=\"footer-links\">\n        <p>\n          <a className=\"p-3 fs-3\" href=\"mailto:support@playerup.com\">\n            <i\n              className=\"fa-solid fa-envelope footer-links\"\n              aria-hidden=\"true\"\n            ></i>\n          </a>\n\n          <a\n            className=\"p-3 fs-3\"\n            href=\"https://github.com/Mayfieldmel/player-up\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fa fa-github is-size-5\" aria-hidden=\"true\"></i>\n          </a>\n\n          <a className=\"p-3 fs-3\" href=\"tel:+1-910-123-4567\">\n            <i className=\"fa-solid fa-mobile-button\" aria-hidden=\"true\"></i>\n          </a>\n        </p>\n      </div>\n\n      <div id=\"footer-text\">\n        <strong>\n          <a\n            className=\" text-dark text-decoration-none\"\n            href=\"https://mayfieldmel.github.io/Mayfield-Portfolio-2.0/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            MELISSA MAYFIELD\n          </a>\n          &emsp;|&emsp;\n          <a\n            className=\" text-dark text-decoration-none\"\n            href=\"https://morganegilbert.github.io/react-portfolio/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            MORGAN GILBERT\n          </a>\n          &emsp;|&emsp;\n          <a\n            className=\" text-dark text-decoration-none\"\n            href=\"https://cduwors.github.io/React-Portfolio/#portfolio\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            CHRISTINA DUWORS\n          </a>\n          &emsp;|&emsp;\n          <a\n            className=\" text-dark text-decoration-none\"\n            href=\"https://rramosx11.github.io/react-portfolio/#about\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            RODOLFO RAMOS\n          </a>\n          &emsp;|&emsp;{\" \"}\n          <a\n            className=\" text-dark text-decoration-none\"\n            href=\"https://bnk5532.github.io/BNK-Port-v2/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            BRIAN KING\n          </a>\n        </strong>\n        <div className=\"fs-8\">\n          &copy; 2022, Player-Up! All Rights Reserved.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport logo from \"../images/player-up-logo.png\";\n// import home from \"../images/board-games.jpg\";\n\nconst Home = () => {\n\tconsole.log(\"inhome\");\n\treturn (\n\t\t<section className=\"home-background\">\n\t\t\t<div className=\"background-cork\">\n\t\t\t\t<div className=\"logo-home\">\n\t\t\t\t\t<img className=\"logo\" src={logo} alt=\"player-up-logo\"></img>\n\t\t\t\t</div>\n\t\t\t</div>\n      <div>\n\t\t\t\t<p>Welcome to the page!</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($username: String!, $email: String!, $password: String!) {\n    updateUser(username: $username, email: $email, password: $password) {\n      _id\n      username\n      email\n    }\n  }\n`;\n\nexport const ADD_PLAYER = gql`\n  mutation addPlayer($eventId: ID!) {\n    addPlayer(eventId: $eventId) {\n      _id\n      eventName\n      attending {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const ADD_EVENT = gql`\n  mutation addEvent(\n\t$eventName: String!, \n\t$description: String!, \n\t$date: String!, \n\t$time: String!, \n\t$location: String!, \n\t$numberPlayersNeeded: String!, \n\t$organizerName: String) {\n    addEvent(   \n\t\teventName: $eventName,\n\t\tdescription: $description, \n\t\tdate: $date, \n\t\ttime: $time, \n\t\tlocation: $location, \n\t\tnumberPlayersNeeded: $numberPlayersNeeded, \n\t\torganizerName: $organizerName) {\n      _id\n      eventName\n      description\n      date\n      time\n      location\n      numberPlayersNeeded\n      organizerName\n      attending {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const UPDATE_EVENT = gql`\n  mutation updateEvent($eventId: ID!,    \n\t\t$eventName: String!, \n\t\t$description: String!, \n\t\t$date: String!, \n\t\t$time: String!, \n\t\t$location: String!, \n\t\t$numberPlayersNeeded: String!, \n\t\t$organizerName: String) {\n    updateEvent(eventId: $eventId,   \n\t\teventName: $eventName,\n\t\tdescription: $description, \n\t\tdate: $date, \n\t\ttime: $time, \n\t\tlocation: $location, \n\t\tnumberPlayersNeeded: $numberPlayersNeeded, \n\t\torganizerName: $organizerName) {\n\t\t\t_id\n\t\teventName\n\t\tdescription\n\t\tdate\n\t\ttime\n\t\tlocation\n\t\tnumberPlayersNeeded\n\t\torganizerName\n\t\tattending {\n\t\t\t_id\n\t\t\tusername\n\t\t}\n    }\n  }\n`;\n\nexport const REMOVE_EVENT = gql`\n  mutation removeEvent($eventId: ID!) {\n    removeEvent(eventId: $eventId) {\n      _id\n      eventName\n      description\n      date\n      time\n      location\n      numberPlayersNeeded\n      organizerName\n      attending {\n        _id\n        username\n      }\n    }\n  }\n`;\n","// see SignupForm.js for comments\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n// import { Link } from \"react-router-dom\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Login = () => {\n\tconst [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n\tconst [validated] = useState(false);\n\tconst [showAlert, setShowAlert] = useState(false);\n\tconst [login, { error }] = useMutation(LOGIN_USER);\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetShowAlert(true);\n\t\t} else {\n\t\t\tsetShowAlert(false);\n\t\t}\n\t}, [error]);\n\n\tconst handleInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetUserFormData({ ...userFormData, [name]: value });\n\t};\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\t// check if form has everything (as per react-bootstrap docs)\n\t\tconst form = event.currentTarget;\n\t\tif (form.checkValidity() === false) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\ttry {\n\t\t\tconst { data } = await login({ variables: { ...userFormData } });\n\n\t\t\tconsole.log(data);\n\t\t\tAuth.login(data.login.token);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\n\t\t}\n\t\tsetUserFormData({\n\t\t\tusername: \"\",\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<section className=\"cork-board loginForm\">\n\t\t\t<div className=\"login-background\">\n\t\t\t\t<h1 className=\"event-header\">Login to Play!</h1>\n\t\t\t</div>\n\t\t\t<div className=\"formGroupBackground\">\n\t\t\t\t<>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tclassName=\"formGroup\"\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tvalidated={validated}\n\t\t\t\t\t\tonSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tdismissible\n\t\t\t\t\t\t\tonClose={() => setShowAlert(false)}\n\t\t\t\t\t\t\tshow={showAlert}\n\t\t\t\t\t\t\tvariant=\"danger\">\n\t\t\t\t\t\t\tSomething went wrong with your login credentials!\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t{/* <Form.Group className=\"formGroup\" > */}\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"email\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Your email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={userFormData.email}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tEmail is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Your password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={userFormData.password}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tPassword is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tclassName=\"loginBtn button:hover \"\n\t\t\t\t\t\t\tdisabled={!(userFormData.email && userFormData.password)}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGame Time!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{/* </Form.Group> */}\n\n\t\t\t\t\t</Form>\n\t\t\t\t</>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Login;\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport function pluralize(name, count) {\n  if (count === 1) {\n    return `${count} ${name}`;\n  }\n  return `${count} ${name}s`;\n}\n\nexport function formatDate(date) {\n  const original = date.split(\"-\")\n  const updatedDate = `${original[1]}/${original[2]}/${original[0]}`\n  return updatedDate\n}\n\nexport function formatTime(time) {\nconst original = time.split(\":\")\nconst timeInt = JSON.parse(original[0])\nfunction subtract(timeInt) {if (timeInt > 12) { return (timeInt - 12)}} \nfunction update() {\n  if(timeInt > 12) { \n    return `${subtract(timeInt)}:${original[1]} PM`\n  } else {\n    return `${time} AM`\n  }\n}\nconst updatedTime = update();\nreturn updatedTime\n}","import React from \"react\";\nimport { pluralize, formatDate, formatTime } from \"../utils/helpers\";\n\nfunction Event({ event }) {\n\treturn (\n\t\t<article className=\"text-box\">\n\t\t\t{/* <span className=\"event-note\">Click for more details!</span> */}\n\t\t\t<h2 className=\"eventName hovertext\" data-hover=\"Click for more details!\">\n\t\t\t\t{event.eventName}\n\t\t\t</h2>\n\t\t\t<span>\n\t\t\t\t{formatTime(event.time)} | {formatDate(event.date)} <br />\n\t\t\t\t{event.location}\n\t\t\t</span>\n\t\t\t{/* <p>Description: {event.description}</p> */}\n\t\t\t<span>\n\t\t\t\t{/* {event.organizerName} | Players needed: {event.numberPlayersNeeded} */}\n\t\t\t\t<br />\n\t\t\t\tPlayers attending:{\" \"}\n\t\t\t\t{!event.attending ? \"0\" : pluralize(\"player\", event.attending.length)}\n\t\t\t</span>\n\t\t</article>\n\t);\n}\n\nexport default Event;\n","import { useMutation } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport { UPDATE_EVENT } from '../utils/mutations';\n// import { QUERY_SINGLE_EVENTS } from '../utils/queries';\n// import Auth from '../utils/auth';\n\nlet variablesGlobal;\nlet loadCounter = 0;\n\nconst EditEvent = ( variables ) => {\n\tif (loadCounter === 0) {\n\t\tvariablesGlobal = variables;\n\t\tloadCounter++\n\t}\n\n  const [eventID, setEventUpdate] = useState({\n\t\t\teventId: variablesGlobal.variables.eventID._id,\n\t\t\teventName: variablesGlobal.variables.eventID.eventName,\n\t\t\tdescription: variablesGlobal.variables.eventID.description,\n\t\t\tdate: variablesGlobal.variables.eventID.date,\n\t\t\ttime: variablesGlobal.variables.eventID.time,\n\t\t\tlocation: variablesGlobal.variables.eventID.location,\n\t\t\tnumberPlayersNeeded: variablesGlobal.variables.eventID.numberPlayersNeeded,\n\t\t\torganizerName: variablesGlobal.variables.eventID.organizerName,\n\t\t\n\t\t});\n\nconst handleInputChange = (event) => {\n\tconst { name, value } = event.target;\n\tsetEventUpdate({ ...eventID, [name]: value });\n\tconsole.log(\"This is eventID after setEventUpdate\", eventID);\n};\n\n  const [ updateEvent ] = useMutation(UPDATE_EVENT);\n\nconst handleFormSubmit = async (event) => {\n\tevent.preventDefault();\n\n\ttry {\n\t\tconst { data } = await updateEvent({ variables: { ...eventID } });\n\t\tif (data) {\n\t\t\tsetEventUpdate({\n\t\t\t\teventId: data.updateEvent._id,\n\t\t\t\teventName: data.updateEvent.eventName,\n\t\t\t\tdescription: data.updateEvent.description,\n\t\t\t\tdate: data.updateEvent.date,\n\t\t\t\ttime: data.updateEvent.time,\n\t\t\t\tlocation: data.updateEvent.location,\n\t\t\t\tnumberPlayersNeeded: data.updateEvent.numberPlayersNeeded,\n\t\t\t\torganizerName: data.updateEvent.organizerName,\n\t\t\t});\t\t\t\n\t\t\tconsole.log(\"success?\", data);\t\t\t\n\t\t\treturn(`./events`);\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n};\n\n\treturn (\n\t\t<section className=\"cork-board loginForm\">\n\t\t\t<div className=\"login-background\">\n\t\t\t\t<h1 className=\"event-header\">Update your Event here!</h1>\n\t\t\t</div>\n\t\t\t<div className=\"formGroupBackground\">\n\t\t\t\t<>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tclassName=\"formGroup\" \n\t\t\t\t\t\tonSubmit={handleFormSubmit}\n            \t\t>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<h2 className=\"addEventHeader\">Update The Game Plan!</h2>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"eventName\">\n\t\t\t\t\t\t\t\tEvent Name\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name your event\"\n\t\t\t\t\t\t\t\tname=\"eventName\"\n\t\t\t\t\t\t\t\tvalue={eventID.eventName}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"description\">\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Describe your event!\"\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tvalue={eventID.description}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"date\">\n\t\t\t\t\t\t\t\tEvent Date\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"MM/DD/YYYY\"\n\t\t\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\t\t\tvalue={eventID.date}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"time\">\n\t\t\t\t\t\t\t\tEvent Time\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"What time does the game begin?\"\n\t\t\t\t\t\t\t\tname=\"time\"\n\t\t\t\t\t\t\t\tvalue={eventID.time}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"location\">\n\t\t\t\t\t\t\t\tLocation\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Where is your event?\"\n\t\t\t\t\t\t\t\tname=\"location\"\n\t\t\t\t\t\t\t\tvalue={eventID.location}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"numberPlayersNeeded\">\n\t\t\t\t\t\t\t\tHow many players?\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"examples: 4 players, 5-10 players\"\n\t\t\t\t\t\t\t\tname=\"numberPlayersNeeded\"\n\t\t\t\t\t\t\t\tvalue={eventID.numberPlayersNeeded}\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"organizerName\">\n\t\t\t\t\t\t\t\tOrganizer's name\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={eventID.organizerName}\n\t\t\t\t\t\t\t\tname=\"organizerName\"\n\t\t\t\t\t\t\t\tvalue={eventID.organizerName}\n\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"loginBtn button:hover \"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"success\">\n\t\t\t\t\t\t\tSubmit The Edits!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\n\nexport default EditEvent;","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      events {\n        _id\n        eventName\n        description\n        date\n        time\n        location\n        numberPlayersNeeded\n        organizerName\n        attending {\n          _id\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      events {\n        _id\n        eventName\n        description\n        date\n        time\n        location\n        numberPlayersNeeded\n        organizerName\n        attending {\n          _id\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_EVENTS = gql`\n  {\n    events {\n      _id\n      eventName\n      description\n      date\n      time\n      location\n      numberPlayersNeeded\n      organizerName\n      attending {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER_EVENTS = gql`\n  query events($organizerName: String!) {\n    events(organizerName: $organizerName) {\n      _id\n      eventName\n      description\n      date\n      time\n      location\n      numberPlayersNeeded\n      organizerName\n      attending {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_EVENTS = gql`\n  query event($id: ID!) {\n    event(_id: $id) {\n      _id\n      eventName\n      description\n      date\n      time\n      location\n      numberPlayersNeeded\n      organizerName\n      attending {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Event from \"./Event\";\nimport EditEvent from \"../pages/EditEvent\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport { ADD_PLAYER } from \"../utils/mutations\";\nimport { Link } from \"react-router-dom\";\n\nfunction EventList({ events }) {\n  // query me\n  const { data } = useQuery(QUERY_ME);\n  const me = data?.me || {};\n  // console.log(\"events\", events);\n  // mutation addPlayer\n  const [addPlayer] = useMutation(ADD_PLAYER);\n  const handleAddPlayer = async (id) => {\n    try {\n      await addPlayer({\n        variables: { eventId: id },\n      });\n      // console.log(me)\n      console.log(events);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  console.log(events);\n  const handleEditEvent = async (id) => {\n    try {\n      console.log(\"This is event\",id)\n            \n      await EditEvent({\n        variables: { eventID: id},\n      });\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <ul className=\"event-list\">\n      {events.map((eventObj) => (\n        <li key={eventObj._id} className=\"card\">\n          <Link className=\"event-link\" to={`/event/${eventObj._id}`}>\n          <Event event={eventObj}></Event>\n          </Link>\n          {eventObj.organizerName === me.username ? (\n            <Link \n              to={`/event/edit/${eventObj._id}`} \n              onClick={() => {\n                console.log(\"This is eventObj\", eventObj)\n              handleEditEvent(eventObj)\n              }}>\n                <button className=\"play-btn\">Edit Game</button>\n            </Link>\n          ) : (\n            <button\n              className=\"play-btn\"\n              onClick={() => {\n                handleAddPlayer(eventObj._id);\n              }}\n            >\n              I'm Game!\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default EventList;\n","import React from \"react\";\nimport EventList from \"../components/EventList\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ALL_EVENTS } from \"../utils/queries\";\n\n\nconst Events = () => {\n  const { loading, data } = useQuery(QUERY_ALL_EVENTS);\n  const events = data?.events || [];\n  // console.log(\"events\", events)\n  return (\n    <section className=\"cork-board\">\n      <h1 className=\"event-header\">Are You Game?</h1>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <EventList events={events}></EventList>\n      )}\n    </section>\n  );\n};\n\nexport default Events;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Wrong page!\n    </div>\n  );\n};\n\nexport default NoMatch;","// see SignupForm.js for comments\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { QUERY_ALL_EVENTS, QUERY_ME } from \"../utils/queries\";\nimport { useMutation, useQuery, useLazyQuery } from \"@apollo/client\";\nimport { ADD_EVENT } from \"../utils/mutations\";\n\nconst AddEvent = ({ closeForm }) => {\n\t\n\tconst [eventFormData, setEventFormData] = useState({\n\t\teventName: \"\",\n\t\tdescription: \"\",\n\t\tdate: \"\",\n\t\ttime: \"\",\n\t\tlocation: \"\",\n\t\tnumberPlayersNeeded: \"\",\n\t\torganizerName: \"\",\n\t});\n\tconst [validated] = useState(false);\n\tconst [showAlert, setShowAlert] = useState(false);\n\tconst [eventAdd, { error }] = useMutation(ADD_EVENT);\n\tconst { data } = useQuery(QUERY_ME);\n\tconst me = data?.me || {};\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetShowAlert(true);\n\t\t} else {\n\t\t\tsetShowAlert(false);\n\t\t}\n\t}, [error]);\n\n\t// refetch code for profile refresh upon submit\n\n\t// const emulateFetch = async (_) => {\n\t// \tconsole.log(`Passing ${eventFormData} to fetch`);\n\t// \treturn new Promise((resolve) => {\n\t// \t\tresolve([{ data: \"ok\" }]);\n\t// \t});\n\t// };\n\n\t// const handleClick = () => {\n\t// \t//manually refetch\n\t// \trefetch();\n\t// };\n\n\t// const { isLoading, refetch } = useQuery(\n\t// \t[QUERY_ME, { eventFormData }],\n\t// \temulateFetch,\n\t// \t{\n\t// \t\trefetchOnWindowFocus: false,\n\t// \t\tenabled: false, // needed to handle refetch manually\n\t// \t}\n\t// );\n\n\t// if (isLoading) return <div>Loading...</div>;\n\t// if (error) return <div>Error: {error}</div>;\n\n\t//   finish refetch code\n\n\n\n\tconst handleInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetEventFormData({ ...eventFormData, [name]: value });\n\t};\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\t// check if form has everything (as per react-bootstrap docs)\n\t\tconst form = event.currentTarget;\n\t\tif (form.checkValidity() === false) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\ttry {\n\t\t\tconst { data } = await eventAdd({ variables: { ...eventFormData } });\n\t\t\tif (data) {\n\t\t\t\tcloseForm();\n\t\t\t}\n\n\t\t\t// Auth.login(data.login.token);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tsetShowAlert(true);\n\t\t}\n\n\t\tsetEventFormData({\n\t\t\teventName: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdate: \"\",\n\t\t\ttime: \"\",\n\t\t\tlocation: \"\",\n\t\t\tnumberPlayersNeeded: \"\",\n\t\t\torganizerName: \"\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<section className=\"cork-board loginForm\">\n\t\t\t<div className=\"formGroupBackground\">\n\t\t\t\t<>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tclassName=\"formGroup\"\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tvalidated={validated}\n\t\t\t\t\t\tonSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tdismissible\n\t\t\t\t\t\t\tonClose={() => setShowAlert(false)}\n\t\t\t\t\t\t\tshow={showAlert}\n\t\t\t\t\t\t\tvariant=\"danger\">\n\t\t\t\t\t\t\tSomething went wrong!\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<h2 className=\"addEventHeader\">The Game Plan!</h2>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"eventName\">\n\t\t\t\t\t\t\t\tEvent Name\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name your event\"\n\t\t\t\t\t\t\t\tname=\"eventName\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={eventFormData.eventName}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tAn event name is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"description\">\n\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"inputDescription\"\n\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\tplaceholder=\"What we'll be doing...\"\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={eventFormData.description}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tA description of your event is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"date\">\n\t\t\t\t\t\t\t\tEvent Date\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tplaceholder=\"MM/DD/YYYY\"\n\t\t\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={eventFormData.date}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tA date is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"time\">\n\t\t\t\t\t\t\t\tEvent Time\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t\t\tplaceholder=\"ex. 4:00 PM, 5-8 PM\"\n\t\t\t\t\t\t\t\tname=\"time\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={eventFormData.time}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tA time for your event is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"location\">\n\t\t\t\t\t\t\t\tLocation\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"ex. address, Ting Park\"\n\t\t\t\t\t\t\t\tname=\"location\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={eventFormData.location}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tA location is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"numberPlayersNeeded\">\n\t\t\t\t\t\t\t\tHow many players?\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"ex. 4+ players, 5-10 players\"\n\t\t\t\t\t\t\t\tname=\"numberPlayersNeeded\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={eventFormData.numberPlayersNeeded}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tNumber of players is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"organizerName\">\n\t\t\t\t\t\t\t\tOrganizer's name\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={me.username}\n\t\t\t\t\t\t\t\tname=\"organizerName\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={me.username}\n\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tThis field is predetermined\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"loginBtn button:hover \"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\teventFormData.eventName &&\n\t\t\t\t\t\t\t\t\teventFormData.date &&\n\t\t\t\t\t\t\t\t\teventFormData.time &&\n\t\t\t\t\t\t\t\t\teventFormData.location\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\t// onClick={handleClick}>\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPost your game!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default AddEvent;\n","import React, { useState, useEffect } from \"react\";\nimport EventList from \"../components/EventList\";\nimport AddEvent from \"./AddEvent\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { QUERY_ME, QUERY_USER, QUERY_ALL_EVENTS } from \"../utils/queries\";\n\n// import Auth from \"../utils/auth\";\n\nconst Profile = () => {\n  //   const { username: userParam } = useParams();\n  //   console.log(userParam);\n\n  // collect params\n  const location = useLocation().pathname;\n  const param = location.split(\"/\")[2];\n\n  //   Query user or me\n  const { loading, data, refetch } = useQuery(param ? QUERY_USER : QUERY_ME, {\n    variables: { username: param },\n  });\n  const userData = data?.me || data?.user || {};\n  console.log(\"userData\", userData);\n  const events = userData?.events || [];\n  console.log(\"my events\", events);\n\n  //   LazyQuery\n//   const [getCommitments, { eventData }] = useLazyQuery(QUERY_ALL_EVENTS);\n//   const allEvents = eventData?.events || [];\n//   console.log(allEvents);\n\n//   query all events\n  const { data: eventData } = useQuery(QUERY_ALL_EVENTS)\n  const allEvents = eventData?.events || []\n  console.log(\"allEvents\", allEvents)\n  const commitments = allEvents.filter(commitment => {\n\treturn commitment.attending.includes(`${userData.username}`)\n  })\n  console.log(\"commitments\", commitments)\n\n  //   use state\n  const [commitmentList, setCommitmentList] = useState(false);\n  const [eventList, setEventList] = useState(true);\n  const [addEventPage, setAddEventPage] = useState(false);\n  \n\n  const displayCommitments = () => {\n    setCommitmentList(true);\n    setAddEventPage(false);\n    setEventList(false);\n    // getCommitments();\n  };\n  const displayEvents = () => {\n    setEventList(true);\n    setCommitmentList(false);\n    setAddEventPage(false);\n  };\n\n  const displayAddEvent = () => {\n    setAddEventPage(true);\n    setCommitmentList(false);\n    setEventList(false);\n  };\n\n  const closeForm = () => {\n    setAddEventPage(false);\n    setEventList(true);\n    refetch();\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  function noEvents() {\n    if (!events.length) {\n      return (\n\t\t<div className=\"center\">\n        <div className=\"card\">\n          <div className=\"text-box\">\n            <h2>No Events Yet. Post a Game to the Board!</h2>\n          </div>\n        </div>\n\t\t</div>\n      );\n    }\n  }\n\n  return (\n    <section className=\"cork-board\">\n      <div className=\"profile-background\">\n        <h1 className=\"event-header\">{userData.username}</h1>\n        <div className=\"button-box\">\n          <button\n            onClick={displayEvents}\n            className={`list-btn selectEvents ${eventList && \"green-yellow\"}`}\n          >\n            {!param ? \"My Events\" : `${param}'s Events`}\n          </button>\n          {!param ? (\n            <button\n              onClick={displayAddEvent}\n              className={`list-btn ${addEventPage && \"green-yellow\"}`}\n            >\n              Post a Game\n            </button>\n          ) : null}\n          <button\n            onClick={displayCommitments}\n            className={`list-btn selectCommitments ${\n              commitmentList && \"green-yellow\"\n            }`}\n          >\n            {!param ? \"My Game Plans\" : `${param}'s Game Plans`}\n          </button>\n        </div>\n      </div>\n      {!addEventPage ? (\n        <>\n\t\t{noEvents()}\n          {commitmentList ? (\n            <EventList events={events}></EventList>\n          ) : (\n            <EventList events={events}></EventList>\n          )}\n        </>\n      ) : (\n        <AddEvent closeForm={closeForm}></AddEvent>\n      )}\n    </section>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n\t// set initial form state\n\tconst [userFormData, setUserFormData] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\t// set state for form validation\n\tconst [validated] = useState(false);\n\t// set state for alert\n\tconst [showAlert, setShowAlert] = useState(false);\n\n\tconst [addUser, { error }] = useMutation(ADD_USER);\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetShowAlert(true);\n\t\t} else {\n\t\t\tsetShowAlert(false);\n\t\t}\n\t}, [error]);\n\n\tconst handleInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetUserFormData({ ...userFormData, [name]: value });\n\t};\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\t// check if form has everything (as per react-bootstrap docs)\n\t\tconst form = event.currentTarget;\n\t\tif (form.checkValidity() === false) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\ttry {\n\t\t\tconst { data } = await addUser({ variables: { ...userFormData } });\n\n\t\t\tconsole.log(data);\n\n\t\t\tAuth.login(data.addUser.token);\n\t\t\tconsole.log(data.addUser.token)\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tsetShowAlert(true);\n\t\t}\n\n\t\tsetUserFormData({\n\t\t\tusername: \"\",\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<section className=\"cork-board loginForm\">\n\t\t\t<div className=\"login-background\">\n\t\t\t\t<h1 className=\"event-header\">Sign Up To Play!!</h1>\n\t\t\t</div>\n\t\t\t<div className=\"formGroupBackground\">\n\t\t\t\t<>\n\t\t\t\t\t{/* This is needed for the validation functionality above */}\n\t\t\t\t\t<Form\n\t\t\t\t\t\tclassName=\"formGroup\"\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tvalidated={validated}\n\t\t\t\t\t\tonSubmit={handleFormSubmit}>\n\t\t\t\t\t\t{/* show alert if server response is bad */}\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tdismissible\n\t\t\t\t\t\t\tonClose={() => setShowAlert(false)}\n\t\t\t\t\t\t\tshow={showAlert}\n\t\t\t\t\t\t\tvariant=\"danger\">\n\t\t\t\t\t\t\tSomething went wrong with your signup!\n\t\t\t\t\t\t</Alert>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"username\">\n\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Your username\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={userFormData.username}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tUsername is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"email\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Your email address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={userFormData.email}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tEmail is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label className=\"label\" htmlFor=\"password\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Your password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tvalue={userFormData.password}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback className=\"feedback\" type=\"invalid\">\n\t\t\t\t\t\t\t\tPassword is required!\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"loginBtn button:hover \"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\tuserFormData.username &&\n\t\t\t\t\t\t\t\t\tuserFormData.email &&\n\t\t\t\t\t\t\t\t\tuserFormData.password\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"success\">\n\t\t\t\t\t\t\tGame On!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { pluralize, formatDate, formatTime } from \"../utils/helpers\";\nimport { Link } from \"react-router-dom\";\n\n// import Auth from \"../utils/auth\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_SINGLE_EVENTS, QUERY_ME } from \"../utils/queries\";\nimport { ADD_PLAYER } from \"../utils/mutations\";\n\nconst SingleEvent = () => {\n\tconst { id: eventId } = useParams();\n\tconst { loading, data } = useQuery(QUERY_SINGLE_EVENTS, {\n\t\tvariables: { id: eventId },\n\t});\n\tconst event = data?.event || {};\n\t// console.log(eventId);\n\t// console.log(data);\n\tconst { myData } = useQuery(QUERY_ME);\n\tconst me = myData?.me || {};\n\n\tconst [addPlayer] = useMutation(ADD_PLAYER);\n\tconst handleAddPlayer = async (id) => {\n\t\ttry {\n\t\t\tawait addPlayer({\n\t\t\t\tvariables: { eventID: id },\n\t\t\t});\n\t\t\t// console.log(me)\n\t\t\t// console.log(events);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n\n\tif (loading) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\treturn (\n\t\t<section className=\"single-event-background\">\n\t\t\t<div>\n\t\t\t\t<div className=\"single-event-head-background\">\n\t\t\t\t\t<p className=\"single-event-subtitle\">Event Details for:</p>\n\t\t\t\t\t<h1 className=\"single-event-header\">{event.eventName}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className=\"singleEvent\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tDate: {formatDate(event.date)} <br />\n\t\t\t\t\t\t\tTime: {formatTime(event.time)} <br />\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName=\"mapLink\"\n\t\t\t\t\t\t\t\thref=\"https://www.google.com/maps/dir/?api=1\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\">\n\t\t\t\t\t\t\t\tLocation: {event.location}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>Description: {event.description}</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tOrganizer:\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={`/profile/${event.organizerName}`}\n\t\t\t\t\t\t\t\tclassName=\"profile-link\">\n\t\t\t\t\t\t\t\t{` ${event.organizerName}`}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\tPlayers needed: {event.numberPlayersNeeded}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{`Players attending: `}\n\t\t\t\t\t\t\t{!event.attending\n\t\t\t\t\t\t\t\t? \"0\"\n\t\t\t\t\t\t\t\t: pluralize(\"player\", event.attending.length)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</span>\n\t\t\t\t\t{event.organizerName === me.username ? (\n\t\t\t\t\t\t<button className=\"add-player\">Edit Game</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"add-player\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandleAddPlayer(event._id);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tI'm Game!\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"mapouter\">\n\t\t\t\t\t\t<div className=\"gmap_canvas\">\n\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\twidth=\"500\"\n\t\t\t\t\t\t\t\theight=\"300\"\n\t\t\t\t\t\t\t\tid=\"gmap_canvas\"\n\t\t\t\t\t\t\t\tsrc=\"https://maps.google.com/maps?q=Raleigh,%20nc&t=&z=11&ie=UTF8&iwloc=&output=embed\"\n\t\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t\tscrolling=\"no\"\n\t\t\t\t\t\t\t\tmargin-height=\"0\"\n\t\t\t\t\t\t\t\tmargin-width=\"0\"></iframe>\n\t\t\t\t\t\t\t<a href=\"https://www.online-timer.net\"></a>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t{/* <style>.mapouter{position:relative;text-align:right;height:300px;width:500px;}</style>\n      <a href=\"https://www.embedgooglemap.net\">html google maps</a>\n      <style>.gmap_canvas {overflow:hidden;background:none!important;height:300px;width:500px;}</style> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default SingleEvent;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n// import page components\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Events from \"./pages/Events\";\nimport EditEvent from \"./pages/EditEvent\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Profile from \"./pages/Profile\";\nimport Signup from \"./pages/Signup\";\nimport SingleEvent from \"./pages/SingleEvent\";\n\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"page\">\n          <div className=\"side\">\n            <Header />\n            <main>\n              <Switch>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/signup\">\n                  <Signup />\n                </Route>\n                <Route path=\"/profile\">\n                  <Profile />\n                </Route>\n                <Route path=\"/events\">\n                  <Events />\n                </Route> \n                <Route path=\"/event/edit/:id\">\n                  <EditEvent />\n                </Route>\n                <Route path=\"/profile/:username\">\n                  <Profile />\n                </Route>\n                <Route path=\"/event/:id\">\n                  <SingleEvent />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"*\">\n                  <NoMatch />\n                </Route>\n              </Switch>\n            </main>\n          </div>\n          <footer>\n          <Footer></Footer>\n          </footer>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import * as serviceWorker from './serviceWorker';\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}